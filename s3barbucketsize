// set the dimensions and margins of the graph
var margine = {tope: 40, righte: 22, bottome: 110, lefte: 40},
    widthe = 700 - margine.lefte - margine.righte,
    heighte = 320 - margine.tope - margine.bottome;



// set the ranges
var x = d3.scaleBand()
          .range([0, widthe])
          .padding(0.1);
var y = d3.scaleLinear()
          .range([heighte, 0]);
          
// append the svg object to the body of the page
// append a 'group' element to 'svg'
// moves the 'group' element to the top left margin
var svgt = d3.select("body").append("svg")
    .attr("width", widthe + margine.lefte + margine.righte)
    .attr("height", heighte + margine.tope + margine.bottome)
  .append("g")
    .attr("transform", 
          "translate(" + margine.lefte + "," + margine.tope + ")");

// get the data
d3.json("http://127.0.0.1:5000/getfile?filename=bucketsize.json", function(error, data) {
  if (error) throw error;

  // format the data
  data.forEach(function(d) {

    d.size = +d.size;
  });

  // Scale the range of the data in the domains
  x.domain(data.map(function(d) { return d.bucket; }));
  y.domain([0, d3.max(data, function(d) { return d.size; })]);

  // append the rectangles for the bar chart
  svgt.selectAll(".bar")
      .data(data)
    .enter().append("rect")
      .attr("class", "bar")
      .attr("x", function(d) { return x(d.bucket); })
      .attr("width", x.bandwidth())
      .attr("y", function(d) { return y(d.size); })
      .attr("height", function(d) { return heighte - y(d.size); });

  // add the x Axis
  svgt.append("g")
      .attr("transform", "translate(0," + heighte + ")")
      .call(d3.axisBottom(x));

  // add the y Axis
  svgt.append("g")
      .call(d3.axisLeft(y));
  
      svgt.append("text")
      .attr("x", (width / 2))             
      .attr("y", 230 - (margin.bottom ))
      .attr("text-anchor", "middle")  
      .style("font-size", "16px") 
      .style("text-decoration", "underline")  
      .text("Size of buckets in KB");


});
